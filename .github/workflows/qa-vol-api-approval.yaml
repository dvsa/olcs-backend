name: QA VOL API ARTIFACT APPROVAL
run-name: QA VOL API ARTIFACT APPROVAL

on:
  workflow_dispatch:
    inputs:
      vol_api_image_tag:
        description: 'Tag of VOL API Image'     
        required: true

env:
  AWS_REGION : ${{ vars.DVSA_AWS_REGION }}
  AWS_ACCOUNT_ID_VOL_NP_TOOLING: ${{ vars.VOL_AWS_ACCOUNT_TOOLING_NONPROD }}
  VOL_NONPROD_TOOLING_REPO_URL: ${{ secrets.VOL_NONPROD_TOOLING_ECR_REPO_URL }}
  VOL_PROD_TOOLING_REPO_URL: ${{ secrets.VOL_PROD_TOOLING_ECR_REPO_URL }}

# Permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:

  validate-nonprod-vol-api-image:
    name: Validate VOL API Image
    uses: ./.github/workflows/image-sign-validation.yaml
    secrets:
      aws_role_arn: ${{ secrets.VOL_AWS_ROLE_TOOLING_NONPROD }}
      ecr_tagged_image: ${{ secrets.VOL_NONPROD_TOOLING_ECR_REPO_URL }}:${{ github.event.inputs.vol_api_image_tag }}

  deploy-on-qa-cluster:

    name: Deploy on QA Cluster
    runs-on: ubuntu-latest
    needs:
    - validate-nonprod-vol-api-image

    steps:
  
    - name: Trigger workflow 'nonprod-vol-api-manual-cd'
      if: github.event_name == 'pull_request'
      run: |
        echo "Here: ${{ github.event.inputs.vol_api_image_tag }}"
      # uses: actions/github-script@v6.4.1
      # with:
      #   github-token: ${{ secrets.GITHUB_TOKEN }}
      #   script: |
      #     await github.rest.actions.createWorkflowDispatch({
      #       owner: 'dvsa',
      #       repo: 'dvsa-container-registry',
      #       workflow_id: 'workflows/nonprod-vol-api-manual-cd.yaml',
      #       ref: 'feature/AWSRESET1-514',
      #       inputs: {
      #         vol_api_image_tag: 'vol-api-7.4.33-alpine-fpm-ddea10a',
      #       },
      #     });
      #             # script: |
      #   #   await github.rest.actions.createWorkflowDispatch({
      #   #   owner: 'dvsa'
      #   #   repo: 'dvsa-container-registry',
      #   #   workflow_id: 'nonprod-vol-api-manual-cd.yaml',
      #   #   ref: 'feature/AWSRESET1-514'
      #   #   inputs: {
      #   #     vol_api_image_tag: ${{ needs.build-test-push-sign-image.outputs.image_tag }}
      #   #   }
      #   #   })

  qa-automation-tests:

    name: Run QA Automation Tests
    runs-on: ubuntu-latest
    needs:
    - deploy-on-qa-cluster

    steps:

    - name: Run automation tests
       # if: github.ref == 'refs/heads/main'
      run: |
       echo 'Run automation tests'
  
  approve-image:

    name: PROD Approval For VOL Image
    runs-on: ubuntu-latest
    needs:
    - qa-automation-tests

    steps:

    - name: Set VOL_API_IMAGE_TAG
      # if: github.ref == 'refs/heads/main'
      run: |
        echo "VOL_API_IMAGE_TAG=${VOL_API_IMAGE_TAG}" >> $GITHUB_ENV

    - name: Setup Notation CLI
      uses: notaryproject/notation-action/setup@v1
      with:
        version: 1.0.0

    - name: Configure AWS credentials on VOL Non Production Tooling ECR
      uses: aws-actions/configure-aws-credentials@v4.0.1
      with:
        role-to-assume: ${{ secrets.VOL_AWS_ROLE_TOOLING_NONPROD }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ vars.DVSA_AWS_REGION}}

    - name: Login to ECR
      id: login-ecr-vol-tooling-non-prod
      uses: aws-actions/amazon-ecr-login@v2.0.1

    - name: Tag & Push VOL API image as PROD Approved
      # if: github.ref == 'refs/heads/main'
      id: push-image
      run: |
        docker pull ${VOL_NONPROD_TOOLING_REPO_URL}:${{ github.event.inputs.vol_api_image_tag }}
        docker tag ${VOL_NONPROD_TOOLING_REPO_URL}:${{ github.event.inputs.vol_api_image_tag }} ${VOL_PROD_TOOLING_REPO_URL}:${VOL_API_IMAGE_TAG}
        docker push ${VOL_PROD_TOOLING_REPO_URL}:${VOL_API_IMAGE_TAG}

    - name: Sign VOL API image
      # if: github.ref == 'refs/heads/main'
      run: |
        notation sign ${VOL_PROD_TOOLING_REPO_URL}:${VOL_API_IMAGE_TAG} \
          --plugin "com.amazonaws.signer.notation.plugin" --id "${{ secrets.DVSA_AWS_NONPRODVOLTOOLING_IMAGE_SIGNING_PROFILE }}"
